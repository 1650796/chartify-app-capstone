import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import styles from "../styles/Home.module.css";
import { withIronSessionSsr } from "iron-session/next";
import sessionOptions from "../config/session";
import Header from "../components/header";
import { Chart } from "react-google-charts";
import { useRouter } from "next/router"
import db from "../db";

export const getServerSideProps = withIronSessionSsr(
  async function getServerSideProps({ req }) {
    const user = req.session.user;
    const charts = await db.chart.getAll(user._id);
    const props = {};

    if (user) {
      props.user = req.session.user;
      props.isLoggedIn = true;
      props.charts = charts;
      console.log(charts);
    }

    return {
      props,
    };
  },
  sessionOptions,
);

export default function Dashboard(props) {
  const router = useRouter()
  //let charts = props.charts;
  let charts
  if (props.charts) {
    charts = props.charts
  }

  async function deleteChart(e) {
    e.preventDefault()
    try {
      const res = await fetch('/api/chart', {
        method: 'DELETE',
        headers: {
          "content-type": "application/json",
        },
        body: JSON.stringify({id: charts.id})
      })
      if (res.status === 200) {
        router.replace(router.asPath)
        console.log("Chart deleted successfully")
      }
    } catch (error) {
      console.log(error)
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>User Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/chartifylogo.png" />
      </Head>

      <Header isLoggedIn={props.isLoggedIn} name={props?.user?.name} />

      <main className={styles.main}>
        <h1 className={styles.title}>
          Your Dashboard
        </h1>
        <p className={styles.description}>
          Here are your recently-created charts:
        </p>

        {charts?.length > 0
          ? (
            <div>
              {charts.map(({
                id,
                chartName,
                categoryTitle,
                amountTitle,
                categoryone,
                amountone,
                categorytwo,
                amounttwo,
                categorythree,
                amountthree,
                categoryfour,
                amountfour,
                categoryfive,
                amountfive,
              }) => {
                const data = [
                  [categoryTitle, amountTitle],
                  [categoryone, amountone],
                  [categorytwo, amounttwo],
                  [categorythree, amountthree],
                  [categoryfour, amountfour],
                  [categoryfive, amountfive],
                ];

                return (
                  <div key={id} className={styles.chart}>
                  <ChartPreview
                    //key={id}
                    title={chartName}
                    data={data}
                  />
                  <button className={styles.deletebutton} onClick={deleteChart}>
                  Delete
                  </button>                 
                  </div>
                );
              })}
            </div>
          )
          : <p>No charts yet. Want to create one?</p>}

        <div className={styles.grid}>
          <Link href="/" className={styles.card}>
            <h2>Home &rarr;</h2>
            <p>Return to the homepage.</p>
          </Link>
          <Link href="/createchart" className={styles.card}>
            <h2>Create Chart &rarr;</h2>
            <p>Create a new chart here.</p>
          </Link>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

function ChartPreview({
  data,
  title,
}) {
  return (
    <div>
      <h2 className={styles.charttitle}>{title}</h2>
      <Chart
        chartType="PieChart"
        data={data}
        options={{title, is3D: true}}
        width={"600px"}
        height={"400px"}
      />
    </div>
  );
}