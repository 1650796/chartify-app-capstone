import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import { useState } from "react";
import styles from "../styles/Home.module.css";
import { withIronSessionSsr } from "iron-session/next";
import sessionOptions from "../config/session";
import Header from "../components/header";
import useLogout from "../hooks/useLogout";
import { Chart } from "react-google-charts";
import { emit } from "../db/models/chart";


export const getServerSideProps = withIronSessionSsr(
  async function getServerSideProps({ req }) {
    const user = req.session.user;
    const props = {};
    if (user) {
      props.user = req.session.user;
      props.isLoggedIn = true;
    } else {
      props.isLoggedIn = false;
    }
    return { props };
  },
  sessionOptions
);

export default function PieChart(props) {
  const router = useRouter();
  const logout = useLogout();

  const [inputs, setInputs] = useState({});
  const [error, setError] = useState("");

  const handleChange = (e) => {
    const name = e.target.name;
    const value = e.target.value;
    setInputs(values => ({...values, [name]: value}))
  }

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log(inputs);
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Chartify</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header isLoggedIn={props.isLoggedIn} name={props.user.name} />

      <main className={styles.main}>
        <h1 className={styles.title}>
          Create a Pie Chart!
        </h1>

        <p className={styles.description}>
          Current Location: <code className={styles.code}>{router.asPath}</code>
          <br />
          Status:{" "}
          <code className={styles.code}>
            {!props.isLoggedIn && " Not"} Logged In
          </code>
        </p>

        <p className={styles.description}>
          Enter the values below to generate a pie chart:
        </p>

        <form 
         className={[styles.card, styles.form].join(" ")}
         onSubmit={handleSubmit}
        >
        <label htmlFor="categoryone">First Category: </label>
        <input 
         type="text" 
         name="categoryone" 
         value={inputs.cateogryone || ""} 
         onChange={handleChange}
        />
        
        <label htmlFor="amountone">First Category Amount:</label>
        <input 
          type="number" 
          name="amountone" 
          value={inputs.amountone || ""} 
          onChange={handleChange}
        />

        <label htmlFor="categorytwo">Second Category: </label>
        <input 
         type="text" 
         name="categorytwo" 
         value={inputs.categorytwo || ""} 
         onChange={handleChange}
        />
        
        <label htmlFor="amounttwo">First Category Amount:</label>
        <input 
          type="number" 
          name="amounttwo" 
          value={inputs.amounttwo || ""} 
          onChange={handleChange}
        />

<label htmlFor="categorytwo">Second Category: </label>
        <input 
         type="text" 
         name="categorytwo" 
         value={inputs.categorytwo || ""} 
         onChange={handleChange}
        />
        
        <label htmlFor="amounttwo">First Category Amount:</label>
        <input 
          type="number" 
          name="amounttwo" 
          value={inputs.amounttwo || ""} 
          onChange={handleChange}
        />

        <label htmlFor="categorythree">Second Category: </label>
        <input 
         type="text" 
         name="categorythree" 
         value={inputs.categorythree || ""} 
         onChange={handleChange}
        />
        
        <label htmlFor="amountthree">First Category Amount:</label>
        <input 
          type="number" 
          name="amountthree" 
          value={inputs.amountthree || ""} 
          onChange={handleChange}
        />

        <label htmlFor="categoryfour">Second Category: </label>
        <input 
         type="text" 
         name="categoryfour" 
         value={inputs.categoryfour || ""} 
         onChange={handleChange}
        />
        
        <label htmlFor="amountfour">First Category Amount:</label>
        <input 
          type="number" 
          name="amountfour" 
          value={inputs.amountfour || ""} 
          onChange={handleChange}
        />

        <label htmlFor="categoryfive">Second Category: </label>
        <input 
         type="text" 
         name="categoryfive" 
         value={inputs.categoryfive || ""} 
         onChange={handleChange}
        />
        
        <label htmlFor="amountfive">First Category Amount:</label>
        <input 
          type="number" 
          name="amountfive" 
          value={inputs.amountfive || ""} 
          onChange={handleChange}
        />
        <button>Submit</button>
          {error && <p>{error}</p>}
    </form>

        <div className={styles.grid}>
          <Link href="/" className={styles.card}>
            <h2>Home &rarr;</h2>
            <p>Return to the homepage.</p>
          </Link>
          <div
            onClick={logout}
            style={{ cursor: "pointer" }}
            className={styles.card}
          >
            <h2>Logout &rarr;</h2>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
