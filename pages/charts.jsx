import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import styles from "../styles/Home.module.css";
import { withIronSessionSsr } from "iron-session/next";
import sessionOptions from "../config/session";
import Header from "../components/header";
import { Chart } from "react-google-charts";
import db from "../db";



export const getServerSideProps = withIronSessionSsr(
  async function getServerSideProps({ req }) {
    const user = req.session.user;

    const charts = await db.chart.getAll(user.id)
    console.log(charts)
    
    //const props = {};

    {/*if (user) {
      props.user = req.session.user;
      props.isLoggedIn = true;

      const charts = await db.chart.getAll(user.id)
    } else {
      props.isLoggedIn = false;
    }*/}
    return { 
      props: {
        user: req.session.user,
        isLoggedIn: true,
        userCharts: charts,
      } 
    };
  },
  sessionOptions
);

/*let chartName = props.chartName;
let categoryTitle = props.categoryTitle;
let amountTitle = props.amountTitle;
let cateogryone = props.cateogryone;
let categorytwo = props.categorytwo;
let categorythree = props.categorythree;
let categoryfour = props.categoryfour;
let categoryfive = props.categoryfive;
let amountone = props.amountone;
let amounttwo = props.amounttwo;
let amountthree = props.amountthree;
let amountfour = props.amountfour;
let amountfive = props.amountfive;

const options = {
  title: {userCharts.chartName} ,
  is3D: true,
}

const data = [
  [{categoryTitle}, {amountTitle}],
  [{cateogryone}, {amountone}],
  [{categorytwo}, {amounttwo}],
  [{categorythree}, {amountthree}],
  [{categoryfour}, {amountfour}],
  [{categoryfive}, {amountfive}],
]
*/
export default function Dashboard(props) {


  return (
    <div className={styles.container}>
      <Head>
        <title>User Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/chartifylogo.png" />
      </Head>

      <Header isLoggedIn={props.isLoggedIn} name={props.user.name} />

      <main className={styles.main}>
        <h1 className={styles.title}>
          Your Dashboard
        </h1>
        <p className={styles.description}>
          Here are your recently-created charts:
        </p>

        {
          props?.charts?.length > 0
          ? (
            <div className={[styles.chart, styles.grid]}>
              {charts.map((chart) =>
                <Chart
                chartType="PieChart"
                data={data}
                options={options}
                width={"600px"}
                height={"400px"}
                />
            )}

          </div>
          )
          : <p>No charts yet. Want to add one?</p>

        }


        <div className={styles.grid}>
          <Link href="/" className={styles.card}>
            <h2>Home &rarr;</h2>
            <p>Return to the homepage.</p>
          </Link>
          <Link href="/createchart" className={styles.card}>
                <h2>Create Chart &rarr;</h2>
                <p>Create a new chart here.</p>
          </Link>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
