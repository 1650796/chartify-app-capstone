import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import { useRouter } from "next/router";
import styles from "../styles/Home.module.css";
import { withIronSessionSsr } from "iron-session/next";
import sessionOptions from "../config/session";
import Header from "../components/header";
import useLogout from "../hooks/useLogout";
import { Chart } from "react-google-charts";
import React, { useState, useEffect } from 'react';

//import dbConnect from "../db/connection";
import ChartPreview from "../components/chartPreview";
import db from "../db";


export const getServerSideProps = withIronSessionSsr(
    async function getServerSideProps({ req }) {
      const user = req.session.user;
      let charts
      if (user)
        charts = await db.chart.getAll(user.id)
      return {
        props: {
          user: req.session.user,
          isLoggedIn: true,
          userCharts: charts,
        }
      };
    },
    sessionOptions
  );

export const data = [
  ["Task", "Hours per Day"],
  ["Work", 11],
  ["Eat", 2],
  ["Commute", 2],
  ["Watch TV", 2],
  ["Sleep", 7],
];

export const options = {
  title: "My Daily Activities",
  is3D: true,
};

export default function Dashboard(props) {
  const router = useRouter();
  const logout = useLogout();


  return (
    <div className={styles.container}>
      <Head>
        <title>User Dashboard</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header isLoggedIn={props.isLoggedIn} name={props.user.name} />

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to your Dashboard
        </h1>

        <p className={styles.description}>
          Status:{" "}
          <code className={styles.code}>
            {!props.isLoggedIn && " Not"} Logged In
          </code>
        </p>

        <p className={styles.description}>
          Here are your charts:
        </p>
        <div className={styles.grid}>
        <Chart
          chartType="PieChart"
          data={data}
          options={options}
          width={"600px"}
          height={"400px"}
        />
        </div>


        {/*
        <div className={styles.grid}>
            {props.userCharts.length > 0 ? <ChartPreview charts={props.userCharts} /> : <NoBookText />}
        </div>
        */}

    {/*
        {
        charts?.length
        ? <section className={styles.grid}>
          {charts.map((chart) => (
            <Chart
            chartType="PieChart"
            data={data}
            options={options}
            width={"600px"}
            height={"400px"} 
              />
            )
          )}
        </section>
        : <p>You don't have any charts yet!</p>
      }
      */}


        <div className={styles.grid}>
          <Link href="/" className={styles.card}>
            <h2>Home &rarr;</h2>
            <p>Return to the homepage.</p>
          </Link>
          <Link href="/createchart" className={styles.card}>
                <h2>Create Chart &rarr;</h2>
                <p>Create a new chart here.</p>
          </Link>
        <div
            onClick={logout}
            style={{ cursor: "pointer" }}
            className={styles.card}
          >
            <h2>Logout &rarr;</h2>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

function NoChartText() {
  return (
    <div className={styles.noBooks}>
      <p><strong>You don't have any charts.</strong></p>
      <p>Want to <Link href="/createchart">create one?</Link></p>
    </div>
  )
}
